summary(cars)
getwd()
setwd("/Users/nayanadavis/Desktop/R/Intro to DS")
setwd("/Users/nayanadavis/Desktop/R/Intro to DS/Final Project")
setwd("/Users/nayanadavis/Desktop/R/Intro to DS/Final Project")
affair_data <- data.frame(read.csv("Fair.csv", header = TRUE))
str(affair_data)
head(affair_data)
affair_data
str(diet_data)
diet_data <- data.frame(read.csv("Dietdata.csv"))
diet_data <- data.frame(read.csv("Dietdata.csv"))
str(diet_data)
head(affair_data)
str(affair_data)
data <- read.csv("LogReg(1).csv")
data <- read.csv("LogReg(1).csv")
head(data)
plot(data$admit)
affair_data <- within(affair_data, {
hadaffair = ifelse(nbaffairs >= 1, 1, 0)
})
str(affair_data)
affair_data <- within(affair_data, {
hadaffair = ifelse(nbaffairs >= 1, "yes", "no")
})
str(affair_data)
head(data)
affair_data$religious <- factor(affair_data$religious)
str(affair_data)
affair_data$education <- factor(affair_data$education)
affair_data$occupation <- factor(affair_data$occupation)
affair_data$rate <- factor(affair_data$rate)
affair_data$hadaffair <- factor(affair_data$hadaffair)
str(affair_data)
dim(affair_data)
mean(age)
mean(affair_data$age)
library(dplyr)
count(affair_data, affair_data$sex)
mean(affair_data$ym)
count(affair_data, affair_data$child)
count(affair_data, affair_data$religous)
sapply(affair_data, function(col) sum(is.na(col)))
count(affair_data, affair_data$religous)
sapply(affair_data, function(col) is.na(col))
summary(affair_data)
df_status(affair_data)
library(funModeling)
install.packages("funModeling")
library(funModeling)
df_status(affair_data)
length(which(is.na(affair)data[6])==T))
length(which(is.na(affair_data[6])==T))
summary(affair_data)
for (row in 1:nrow(affair_data)) {
print(affair_data[row], "has", length(which(is.na(affair_data[6])==T)), "null values")
}
print(affair_data[row], "has", length(which(is.na(affair_data[row])==T)), "null values")
print(affair_data[row])
summary(affair_data)
library(Amelia)
install.packages("Amelia")
library(Amelia)
missmap(affair_data, main = "Missing values vs observed")
missmap(affair_data, main = "Missing vs observed values")
plot(affair_data$hadaffair)
head(data)
str(data)
data$rank <- factor(data$rank)
data$admit <- factor(data$admit)
admitlogit <- glm(admit~gre+gpa+rank, family = binomial(link = "logit"), data = data)
admitlogit
summary(admitlogit)
hadaffairlogit <- glm(hadaffair~sex+age+ym+child+religious+education+occupation+rate, family = binomial(link = "logit"), data = affair_data)
hadaffairlogit
hadaffairlogit <- glm(hadaffair~sex+child+religious+education+occupation+rate, family = binomial(link = "logit"), data = affair_data)
hadaffairlogit
str(affair_data)
data$rank <- factor(data$rank)
data$admit <- factor(data$admit)
data
str(data)
admitlogit <- glm(admit~gre+gpa+rank, family = binomial(link = "logit"), data = data)
admitlogit
summary(admitlogit)
hadaffairlogit <- glm(hadaffair~sex+age+ym+child+religious+education+occupation+rate, family = binomial(link = "logit"), data = affair_data)
hadaffairlogit <- glm(hadaffair~sex+age+ym+child+religious+education+occupation+rate, family = binomial(link = "logit"), data = affair_data)
summary(hadaffairlogit)
train <- affair_data[1:400, ]
test <- affair_datat[401:601, ]
hadaffairlogit <- glm(hadaffair~sex+age+ym+child+religious+education+occupation+rate, family = binomial(link = "logit"), data = train)
train <- affair_data[1:400, ]
test <- affair_data[401:601, ]
test <- affair_data[401:601, ]
hadaffairlogit <- glm(hadaffair~sex+age+ym+child+religious+education+occupation+rate, family = binomial(link = "logit"), data = train)
trainIndex <- createDataPartition(affair_data$hadaffair, p=.66, list=FALSE,times = 1)
library(caret)
trainIndex <- createDataPartition(affair_data$hadaffair, p=.66, list=FALSE,times = 1)
train <- affair_data[trainIndex, ]
test <- affair_data[trainIndex, ]
hadaffairlogit <- glm(hadaffair~sex+age+ym+child+religious+education+occupation+rate, family = binomial(link = "logit"), data = train)
summary(hadaffairlogit)
test <- affair_data[-trainIndex, ]
str(affair_data)
head(affair_data)
affair<- affair_data[ -c(10) ]
affair_data<- affair_data[ -c(10) ]
affair_data
affair_data<- affair_data[ -c(10) ]
str(affair_data)
head(affair_data)
affair_data$religious <- factor(affair_data$religious)
affair_data$education <- factor(affair_data$education)
affair_data$occupation <- factor(affair_data$occupation)
affair_data$rate <- factor(affair_data$rate)
affair_data$hadaffair <- factor(affair_data$hadaffair)
str(affair_data)
affair_data<- affair_data[ -c(10) ]
affair_data
affair_data <- within(affair_data, {
hadaffair = ifelse(nbaffairs >= 1, "yes", "no")
})
affair_data <- data.frame(read.csv("Fair.csv", header = TRUE))
affair_data <- within(affair_data, {
hadaffair = ifelse(nbaffairs >= 1, "yes", "no")
})
affair_data<- affair_data[ -c(10) ]
affair_data$religious <- factor(affair_data$religious)
affair_data$education <- factor(affair_data$education)
affair_data$occupation <- factor(affair_data$occupation)
affair_data$rate <- factor(affair_data$rate)
affair_data$hadaffair <- factor(affair_data$hadaffair)
str(affair_data)
head(affair_data)
summary(affair_data)
unique(affair_data[c("sex","age", "ym", 'child', 'religious', 'education', 'occupation', 'rate', 'hadaffair')]
see_distinct <- unique(affair_data[c("sex","age", "ym", 'child', 'religious', 'education', 'occupation', 'rate', 'hadaffair')])
affair_data <- data.frame(read.csv("Fair.csv", header = TRUE))
affair_data
str(affair_data)
affair_data <- data.frame(read.csv("Fair.csv", header = TRUE))
affair_data <- within(affair_data, {
hadaffair = ifelse(nbaffairs >= 1, "yes", "no")
})
affair_data<- affair_data[ -c(10) ]
affair_data$age<- factor(affair_data$age)
affair_data$ym <- factor(affair_data$ym)
affair_data$religious <- factor(affair_data$religious)
affair_data$education <- factor(affair_data$education)
affair_data$occupation <- factor(affair_data$occupation)
affair_data$rate <- factor(affair_data$rate)
affair_data$hadaffair <- factor(affair_data$hadaffair)
str(affair_data)
head(affair_data)
summary(affair_data)
plot(affair_data$hadaffair)
library(Amelia)
missmap(affair_data, main = "Missing vs observed values")
library(caret)
trainIndex <- createDataPartition(affair_data$hadaffair, p=.66, list=FALSE,times = 1)
train <- affair_data[trainIndex, ]
test <- affair_data[-trainIndex, ]
hadaffairlogit <- glm(hadaffair~sex+age+ym+child+religious+education+occupation+rate, family = binomial(link = "logit"), data = train)
summary(hadaffairlogit)
confint(hadaffairlogit)
exp(coef(hadaffairlogit))
summary(hadaffairlogit)
hadaffairlogit <- glm(hadaffair~age+religious+rate, family = binomial(link = "logit"), data = train)
summary(hadaffairlogit)
exp(coef(hadaffairlogit))
modeloutout <- exp(coef(hadaffairlogit))
modeloutout
exp(coef(admitlogit))
summary(admitlogit)
exp(coef(admitlogit))
library(ResourceSelection)
hoslem.test(affair_data$hadaffair, fitted(hadaffarlogit))
hoslem.test(affair_data$hadaffair, fitted(hadaffairlogit))
summary(hadaffairlogit)
hadaffairlogit <- glm(hadaffair~sex+age+ym+child+religious+education+occupation+rate, family = binomial(link = "logit"), data = train)
summary(hadaffairlogit)
summary(hadaffairlogit)
modeloutout <- exp(coef(hadaffairlogit))
library(ResourceSelection)
hoslem.test(affair_data$hadaffair, fitted(hadaffairlogit))
hoslem.test(test$hadaffair, fitted(hadaffairlogit))
hoslem.test(test$hadaffair, fitted(hadaffairlogit))
hoslem.test(train$hadaffair, fitted(hadaffairlogit))
prob=predict(admitlogit, type = c("response"))
prob
prob=predict(hadaffairlogit, type = c("response"))
prob
hadaffairlogit <- glm(hadaffair~religious, family = binomial(link = "logit"), data = train)
summary(hadaffairlogit)
modeloutout <- exp(coef(hadaffairlogit))
modeloutout
library(ResourceSelection)
hoslem.test(train$hadaffair, fitted(hadaffairlogit))
prob=predict(hadaffairlogit, type = c("response"))
prob
h <- roc(hadaffair~prob, data=test)
library(pROC)
install.packages("pROC")
library(pROC)
h <- roc(hadaffair~prob, data=test)
hoslem.test(test$hadaffair, fitted(hadaffairlogit))
h <- roc(hadaffair~prob, data=test)
hadaffairlogit <- glm(hadaffair~sex+age+ym+child+religious+education+occupation+rate, family = binomial(link = "logit"), data = train)
hoslem.test(test$hadaffair, fitted(hadaffairlogit))
hadaffairlogit <- glm(hadaffair~religious, family = binomial(link = "logit"), data = train)
summary(hadaffairlogit)
modeloutput <- exp(coef(hadaffairlogit))
hoslem.test(train$hadaffair, fitted(hadaffairlogit))
pred.model <- predict.glm(hadaffairlogit,test,type='response')
pred.model
hadaffairlogit <- glm(hadaffair~sex+age+ym+child+religious+education+occupation+rate, family = binomial(link = "logit"), data = train)
summary(hadaffairlogit)
hadaffairlogit <- glm(hadaffair~age, religious, family = binomial(link = "logit"), data = train)
hadaffairlogit <- glm(hadaffair~age + religious, family = binomial(link = "logit"), data = train)
summary(hadaffairlogit)
hadaffairlogit <- glm(hadaffair~age + religious, family = binomial(link = "logit"), data = train)
summary(hadaffairlogit)
hadaffairlogit <- glm(hadaffair~age + religious, family = binomial(link = "logit"), data = train)
hadaffairlogit <- glm(hadaffair~religious, family = binomial(link = "logit"), data = train)
summary(hadaffairlogit)
modeloutput <- exp(coef(hadaffairlogit))
modelpoutput
modeloutput
pred.model <- predict.glm(hadaffairlogit,test,type='response')
pred.model
hoslem.test(train$hadaffair, fitted(hadaffairlogit))
hadaffairlogit <- glm(hadaffair~age + religious + rate, family = binomial(link = "logit"), data = train)
summary(hadaffairlogit)
hadaffairlogit <- glm(hadaffair~religious + rate, family = binomial(link = "logit"), data = train)
summary(hadaffairlogit)
modeloutput <- exp(coef(hadaffairlogit))
modeloutput
hoslem.test(train$hadaffair, fitted(hadaffairlogit))
pred.model <- predict.glm(hadaffairlogit,test,type='response')
pred.model
exp(coef(admitlogit))
str(affair_data)
affair_data <- data.frame(read.csv("Fair.csv", header = TRUE))
str(affair_data)
affair_data <- within(affair_data, {
hadaffair = ifelse(nbaffairs >= 1, "yes", "no")
})
affair_data<- affair_data[ -c(10) ]
affair_data$age<- factor(affair_data$age)
affair_data$ym <- factor(affair_data$ym)
affair_data$religious <- factor(affair_data$religious)
affair_data$education <- factor(affair_data$education)
affair_data$occupation <- factor(affair_data$occupation)
affair_data$rate <- factor(affair_data$rate)
affair_data$hadaffair <- factor(affair_data$hadaffair)
str(affair_data)
hadaffairlogit <- glm(hadaffair~sex+age+ym+child+religious+education+occupation+rate, family = binomial(link = "logit"), data = train)
summary(hadaffairlogit)
modeloutput <- exp(coef(hadaffairlogit))
modeloutput
affair_data<- affair_data[ -c(10) ]
affair_data$age<- factor(affair_data$age)
affair_data$ym <- factor(affair_data$ym)
affair_data$religious <- factor(affair_data$religious)
affair_data$education <- factor(affair_data$education)
affair_data$occupation <- factor(affair_data$occupation)
affair_data$rate <- factor(affair_data$rate)
affair_data$hadaffair <- factor(affair_data$hadaffair)
hadaffairlogit <- glm(hadaffair~religious + rate, family = binomial(link = "logit"), data = train)
summary(hadaffairlogit)
hadaffairlogit <- glm(hadaffair~sex+age+ym+child+religious+education+occupation+rate, family = binomial(link = "logit"), data = train)
summary(hadaffairlogit)
modeloutput <- exp(coef(hadaffairlogit))
modeloutput
plot(affair_data$hadaffair)
str(affair_data)
head(affair_data)
plot(affair_data$hadaffair)
affair_data <- data.frame(read.csv("Fair.csv", header = TRUE))
str(affair_data)
affair_data <- within(affair_data, {
hadaffair = ifelse(nbaffairs >= 1, "yes", "no")
})
affair_data<- affair_data[ -c(10) ]
affair_data$age<- factor(affair_data$age)
affair_data$ym <- factor(affair_data$ym)
affair_data$religious <- factor(affair_data$religious)
affair_data$education <- factor(affair_data$education)
affair_data$occupation <- factor(affair_data$occupation)
affair_data$rate <- factor(affair_data$rate)
affair_data$hadaffair <- factor(affair_data$hadaffair)
str(affair_data)
head(affair_data)
summary(affair_data)
plot(affair_data$hadaffair)
pred.model <- predict.glm(hadaffairlogit,test,type='response')
pred.model
hadaffairlogit <- glm(hadaffair~religious + rate, family = binomial(link = "logit"), data = train)
pred.model <- predict.glm(hadaffairlogit,test,type='response')
pred.model
hadaffairlogit <- glm(hadaffair~religious + rate, family = binomial(link = "logit"), data = train)
summary(hadaffairlogit)
hoslem.test(train$hadaffair, fitted(hadaffairlogit))
